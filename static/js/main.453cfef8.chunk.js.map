{"version":3,"sources":["components/Button/CustomButton.js","constants/patientConstants.js","constants/userConstants.js","actions/userActions.js","screens/LandingScreen/LandingScreen.js","constants/modalConstants.js","actions/patientActions.js","components/EditPatientModal/EditPatient.js","components/CustomNavbar/CustomNavbar.js","screens/PatientLisingScreen/PatientListingScreen.js","screens/PatientDetailScreen/PatientDetailScreen.js","App.js","store.js","reducers/patientReducer.js","reducers/userReducer.js","index.js","screens/PatientDetailScreen/patientDetail.module.css","components/EditPatientModal/editPatient.module.css","screens/LandingScreen/landingScreen.module.css","screens/PatientLisingScreen/patientListing.module.css","components/CustomNavbar/navbar.module.css","components/Button/customButton.module.css"],"names":["CustomButton","props","Button","style","className","styles","button","children","ADD_PATIENT_REQUEST","ADD_PATIENT_SUCCESS","EDIT_PATIENT_REQUEST","EDIT_PATIENT_SUCCESS","DELETE_PATIENT","RESET_DATA","USER_LOGOUT","userLogout","history","dispatch","a","type","window","localStorage","clear","push","error","console","log","LandingScreen","useDispatch","useHistory","useState","userName","setUserName","loggedUser","setLoggedUser","useEffect","userData","JSON","parse","getItem","Container","container","Row","innerContainer","imageContainer","src","alt","formContainer","Form","onSubmit","e","preventDefault","setItem","stringify","onClick","mutedText","Group","controlId","Control","placeholder","maxLength","value","onChange","target","disabled","modalConstants","editPatient","data","id","getState","tableData","patientData","elementsIndex","findIndex","element","newTableData","payload","response","message","EditPatient","existingPatientData","isValid","firstName","setFirstName","lastName","setLastName","phone","setPhone","email","setEmail","country","setCountry","countryList","setCountryList","street","setStreet","pinCode","setPinCode","fetchCountries","axios","get","countryData","map","d","name","callingCode","callingCodes","validateName","string","regex","test","length","Modal","mainContainer","size","aria-labelledby","centered","Header","modalHeader","Title","title","Body","uuidv4","addPatient","onHide","Label","alert","onBlur","required","Text","Col","option","options","c","label","code","htmlFor","InputGroup","Prepend","marginTop","FormControl","replace","Footer","CustomNavbar","React","modalShow","setModalShow","Navbar","Brand","logo","Toggle","Collapse","buttonGroup","addButton","xmlns","fill","width","height","viewBox","show","PatientLisingScreen","searchText","setSearchText","selectedPatient","setSelectedPatient","filteredData","setFilteredtData","useSelector","state","searchInput","filter","toLowerCase","includes","header","Table","striped","hover","sytle","borderColor","index","tableRow","onDoubleClick","noData","PatientDetailScreen","patientId","match","params","patientsData","backContainer","backText","dataToSave","backgroundColor","border","splice","App","basename","path","component","exact","reducer","combineReducers","action","loading","user","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uPAWeA,EARM,SAACC,GACpB,OACE,cAACC,EAAA,EAAD,yBAAQC,MAAK,eAAMF,EAAME,OAAQC,UAAWC,IAAOC,QAAYL,GAA/D,aACGA,EAAMM,a,0CCNAC,EAAoB,sBACpBC,EAAsB,sBAEtBC,EAAuB,uBACvBC,EAAuB,uBAEvBC,EAAe,iBACfC,EAAW,aCNXC,EAAY,cCCZC,EAAa,SAACC,GAAD,8CAAa,WAAOC,GAAP,SAAAC,EAAA,sDACrC,IACED,EAAS,CACPE,KAAMN,IAERI,EAAS,CACPE,KAAML,IAERM,OAAOC,aAAaC,QACpBN,EAAQO,KAAK,KACb,MAAOC,GACPC,QAAQC,IAAIF,GAXuB,2CAAb,uDCmFXG,EA9EO,WAEpB,IAAMV,EAAWW,cAEbZ,EAAUa,cAGd,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoBA,OANAC,qBAAU,WACR,IAAIC,EAAWC,KAAKC,MAAMjB,aAAakB,QAAQ,SAC3CH,GACFF,EAAcE,EAASL,YAExB,CAACG,IAEF,cAACM,EAAA,EAAD,CAAWpC,UAAWC,IAAOoC,UAA7B,SACE,cAACC,EAAA,EAAD,UACE,sBAAKtC,UAAWC,IAAOsC,eAAvB,UACE,cAACD,EAAA,EAAD,UACE,qBAAKtC,UAAWC,IAAOuC,eAAvB,SACE,qBACEC,IAAI,4EACJC,IAAI,aAIV,cAACJ,EAAA,EAAD,CAAKtC,UAAWC,IAAO0C,cAAvB,SACE,cAACC,EAAA,EAAD,CAAMC,SA9BM,SAACC,GACrBA,EAAEC,iBACF9B,aAAa+B,QAAQ,OAAQf,KAAKgB,UAAU,CAAEtB,cAC9Cf,EAAQO,KAAK,cA2BL,SACIU,EAgBA,qCACE,eAAC,EAAD,CAAcqB,QAAS,kBAAMtC,EAAQO,KAAK,cAA1C,yBACeU,KAEf,mBACE7B,UAAWC,IAAOkD,UAClBD,QAAS,kBA9CzBrC,EAASF,EAAWC,SACpBkB,EAAc,KA2CA,sCAnBF,qCACE,cAACc,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,YAAvC,SACE,cAACT,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,8BACZC,UAAU,KACVC,MAAO9B,EACP+B,SAAU,SAACZ,GAAD,OAAOlB,EAAYkB,EAAEa,OAAOF,YAG1C,cAAC,EAAD,CAAc1C,KAAK,SAAS6C,SAAuB,KAAbjC,EAAtC,qC,kCC5DLkC,EACJ,OADIA,EAEF,S,qFCmCEC,EAAc,SAACC,EAAMC,GAAP,8CAAc,WAAOnD,EAAUoD,GAAjB,mBAAAnD,EAAA,sDACvC,IAEQoD,EAAYD,IAAWE,YAAYJ,KAEzClD,EAAS,CACPE,KAAMT,KAGF8D,EAAgBF,EAAUG,WAAU,SAACC,GAAD,OAAaA,EAAQN,KAAOA,OACjD,KACfO,EADkB,YACCL,IACVE,GAAb,aAA+BJ,MAAMD,GACrClD,EAAS,CACPE,KAAMR,EACNiE,QAASD,KAGb,MAAOnD,GACPC,QAAQC,IAAIF,GACZP,EAAS,CACPE,KLrD2B,oBKsD3ByD,QACEpD,EAAMqD,UAAYrD,EAAMqD,SAASV,KAAKW,QAClCtD,EAAMqD,SAASV,KAAKW,QACpBtD,EAAMsD,UAzBuB,2CAAd,yDC8NZC,EAlPK,SAAC9E,GACnB,IAAMgB,EAAWW,cAETT,EAAoClB,EAApCkB,KAAY6D,EAAwB/E,EAA9BkE,KAEd,EAAkCrC,mBAAS,CACzC+B,MAAO,GACPoB,SAAS,EACTH,QAAS,wDAHX,mBAAOI,EAAP,KAAkBC,EAAlB,KAKA,EAAgCrD,mBAAS,CACvC+B,MAAO,GACPoB,SAAS,EACTH,QAAS,uDAHX,mBAAOM,EAAP,KAAiBC,EAAjB,KAKA,EAA0BvD,mBAAS,CACjC+B,MAAO,GACPoB,SAAS,EACTH,QAAS,yDAHX,mBAAOQ,EAAP,KAAcC,EAAd,KAKA,EAA0BzD,mBAAS,IAAnC,mBAAO0D,EAAP,KAAcC,EAAd,KACA,EAA8B3D,mBAAS,IAAvC,mBAAO4D,EAAP,KAAgBC,EAAhB,KACA,EAAsC7D,mBAAS,IAA/C,mBAAO8D,EAAP,KAAoBC,EAApB,KACA,EAA4B/D,mBAAS,IAArC,mBAAOgE,EAAP,KAAeC,EAAf,KACA,GAA8BjE,mBAAS,IAAvC,qBAAOkE,GAAP,MAAgBC,GAAhB,MAyBMC,GAAc,uCAAG,gCAAAhF,EAAA,sEACEiF,IAAMC,IAAI,wCADZ,gBACbjC,EADa,EACbA,KACJkC,EAAclC,EAAKmC,KAAI,SAACC,GAC1B,MAAO,CAAEC,KAAMD,EAAEC,KAAMC,YAAaF,EAAEG,aAAa,OAErDb,EAAeQ,GALM,2CAAH,qDAedM,GAAe,SAACC,EAAQJ,GAC5B,IAAIK,EAAQ,iBACA,SAARL,EACFK,EAAMC,KAAKF,GACNzB,EAAa,2BAAKD,GAAN,IAAiBD,SAAS,KACvCE,EAAa,2BAAKD,GAAN,IAAiBrB,MAAO+C,EAAQ3B,SAAS,KAEzD4B,EAAMC,KAAKF,GACPvB,EAAY,2BAAKD,GAAN,IAAgBH,SAAS,KACpCI,EAAY,2BAAKD,GAAN,IAAgBvB,MAAO+C,EAAQ3B,SAAS,MAiC3D,OAPA9C,qBAAU,WA5DW,IAACgC,EA6DG,IAAvByB,EAAYmB,QAAgBb,KACxB/E,IAAS8C,IA9DOE,EA+DLa,EA9DfG,EAAa,2BAAKD,GAAN,IAAiBrB,MAAOM,EAAKe,aACzCG,EAAY,2BAAKD,GAAN,IAAgBvB,MAAOM,EAAKiB,YACvCG,EAAS,2BAAKD,GAAN,IAAazB,MAAOM,EAAKmB,SACjCG,EAAStB,EAAKqB,OACdO,EAAU5B,EAAK2B,QACfG,GAAW9B,EAAK6B,SAChBL,EAAWxB,EAAKuB,YA0Df,CAACV,IAGF,mCACE,eAACgC,EAAA,EAAD,yBACE5G,UAAWC,IAAO4G,eACdhH,GAFN,IAGEiH,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EALV,UAOE,cAACJ,EAAA,EAAMK,OAAP,CAAcjH,UAAWC,IAAOiH,YAAhC,SACE,eAACN,EAAA,EAAMO,MAAP,CACEnD,GAAG,gCACHhE,UAAWC,IAAOmH,MAFpB,UAIGrG,IAAS8C,EAAsB,OAAS,SAJ3C,gBAOF,cAAC+C,EAAA,EAAMS,KAAP,UACE,eAACzE,EAAA,EAAD,CAAMC,SA9CQ,SAACC,GAErBA,EAAEC,iBAEA,IAAMgB,EAAO,CACXe,UAAUA,EAAUrB,MACpBuB,SAASA,EAASvB,MAClB2B,QACAF,MAAOA,EAAMzB,MACb6B,UACAI,SACAE,YAGE/E,EADJE,IAAS8C,EACIC,EAAYC,EAAMa,EAAoBZ,IDnG/B,SAACD,GAAD,8CAAU,WAAOlD,EAAUoD,GAAjB,eAAAnD,EAAA,sDAClC,IAEQoD,EAAYD,IAAWE,YAAYJ,KAEzClD,EAAS,CACPE,KAAMX,IAIR8D,EAAU/C,KAAV,2BAAoB4C,GAApB,IAA0BC,GAAIsD,iBAC9BzG,EAAS,CACPE,KAAMV,EACNmE,QAASN,IAEX,MAAO9C,GACPC,QAAQC,IAAIF,GACZP,EAAS,CACPE,KL1B0B,mBK2B1ByD,QACEpD,EAAMqD,UAAYrD,EAAMqD,SAASV,KAAKW,QAClCtD,EAAMqD,SAASV,KAAKW,QACpBtD,EAAMsD,UAtBkB,2CAAV,wDCoGP6C,CAAWxD,IAjE1BgB,EAAa,IACbE,EAAY,IACZE,EAAS,IACTE,EAAS,IACTE,EAAW,IACXI,EAAU,IACVE,GAAW,IACXN,EAAW,IA6DT1F,EAAM2H,UA4BF,UACE,eAAC5E,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,YAAvC,UACE,eAACT,EAAA,EAAK6E,MAAN,2BAA0B3C,EAAUD,SAChC,uBAAM7E,UAAWC,IAAOyH,MAAxB,eAAkC5C,EAAUJ,cAEhD,cAAC9B,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,mBACZC,UAAU,KACVC,MAAOqB,EAAUrB,MACjBC,SAAU,SAACZ,GAAD,OACRiC,EAAa,2BAAKD,GAAN,IAAiBrB,MAAOX,EAAEa,OAAOF,UAE/CkE,OAAQ,SAAC7E,GAAD,OAAOyD,GAAazD,EAAEa,OAAOF,MAAO,UAC5CmE,UAAQ,OAGZ,eAAChF,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,WAAvC,UACE,eAACT,EAAA,EAAK6E,MAAN,yBAAwBzC,EAASH,SAC7B,uBAAM7E,UAAWC,IAAOyH,MAAxB,eAAkC1C,EAASN,cAE/C,cAAC9B,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,kBACZC,UAAU,KACVC,MAAOuB,EAASvB,MAChBC,SAAU,SAACZ,GAAD,OACRmC,EAAY,2BAAKD,GAAN,IAAgBvB,MAAOX,EAAEa,OAAOF,UAE7CkE,OAAQ,SAAC7E,GAAD,OAAOyD,GAAazD,EAAEa,OAAOF,MAAO,SAC5CmE,UAAQ,OAGZ,eAAChF,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,QAAvC,UACE,cAACT,EAAA,EAAK6E,MAAN,4BACA,cAAC7E,EAAA,EAAKU,QAAN,CACEvC,KAAK,QACLwC,YAAY,cACZE,MAAO2B,EACP1B,SAAU,SAACZ,GAAD,OAAOuC,EAASvC,EAAEa,OAAOF,QACnCmE,UAAQ,IAEV,cAAChF,EAAA,EAAKiF,KAAN,CAAW7H,UAAU,aAArB,+DAIF,eAAC4C,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,UAAvC,UACE,cAACT,EAAA,EAAK6E,MAAN,sBACA,eAACnF,EAAA,EAAD,WACE,cAACwF,EAAA,EAAD,UACE,cAAC,IAAD,CACEvE,YAAY,iBACZE,MAAO6B,EACP5B,SAAU,SAACqE,GAAD,OAAYxC,EAAWwC,IACjCC,QAASxC,EAAYU,KAAI,SAAC+B,GACxB,MAAO,CACLxE,MAAOwE,EAAE7B,KACT8B,MAAOD,EAAE7B,KACT+B,KAAMF,EAAE5B,gBAGZuB,UAAQ,MAGZ,cAACE,EAAA,EAAD,UACE,cAAClF,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,oBACZE,MAAOiC,EACPhC,SAAU,SAACZ,GAAD,OAAO6C,EAAU7C,EAAEa,OAAOF,QACpCmE,UAAQ,MAGZ,cAACE,EAAA,EAAD,UACE,cAAClF,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,gBACZE,MAAOmC,GACPlC,SAAU,SAACZ,GAAD,OAAO+C,GAAW/C,EAAEa,OAAOF,QACrCmE,UAAQ,YAKhB,wBAAOQ,QAAQ,YAAf,6BAA4ClD,EAAML,SAC9C,uBAAM7E,UAAWC,IAAOyH,MAAxB,eAAkCxC,EAAMR,cAE5C,eAAC2D,EAAA,EAAD,CAAYrI,UAAU,OAAtB,UACE,cAACqI,EAAA,EAAWC,QAAZ,CAAoBvI,MAAO,CAACwI,UAAU,OAAtC,SACGjD,GACC,eAAC+C,EAAA,EAAWR,KAAZ,CAAiB7D,GAAG,eAApB,cACIsB,EAAQ6C,UAIhB,cAACK,EAAA,EAAD,CACAzI,MAAO,CAACwI,UAAU,OAChBxH,KAAK,SACLwC,YAAY,qBACZE,MAAOyB,EAAMzB,MACbC,SAAU,SAACZ,GAvKG,IAACW,KAuKsBX,EAAEa,OAAOF,OAtKpDgF,QAAQ,UAAW,IAAI9B,OAAS,IACtClD,EAAMgF,QAAQ,UAAW,IAAI9B,OAAS,GAClCxB,EAAS,2BAAKD,GAAN,IAAazB,MAAOA,EAAOoB,SAAS,KAC5CM,EAAS,2BAAKD,GAAN,IAAazB,MAAOA,EAAOoB,SAAS,MAoKpCrB,UAAU,KACVoE,UAAQ,OAGZ,cAAC,EAAD,CAAc7G,KAAK,SAAU6C,UAAW0B,IAAYR,EAAUD,UAAYG,EAASH,UAAYK,EAAML,QAArG,SACG9D,IAAS8C,EAAsB,eAAiB,gBAIvD,cAAC+C,EAAA,EAAM8B,OAAP,UACE,cAAC,EAAD,CAAcxF,QAASrD,EAAM2H,OAA7B,4B,2BCjNKmB,GAlCM,WAEnB,IAAM9H,EAAWW,cAEbZ,EAAUa,cAEd,EAAkCmH,IAAMlH,UAAS,GAAjD,mBAAOmH,EAAP,KAAkBC,EAAlB,KACA,OACE,eAACC,EAAA,EAAD,CAAQ/I,UAAWC,KAAOoC,UAA1B,UACE,cAAC0G,EAAA,EAAOC,MAAR,CAAchJ,UAAWC,KAAOgJ,KAAM/F,QAAS,kBAAMtC,EAAQO,KAAK,MAAlE,SACE,4CAEF,cAAC4H,EAAA,EAAOG,OAAR,IACA,eAACH,EAAA,EAAOI,SAAR,CAAiBnJ,UAAWC,KAAOmJ,YAAnC,UACE,cAACxG,EAAA,EAAD,IACA,cAACmG,EAAA,EAAOlB,KAAR,CACE3E,QAAS,kBAAM4F,GAAa,IAC5B9I,UAAWC,KAAOoJ,UAFpB,SAIE,+CAEF,cAACN,EAAA,EAAOlB,KAAR,CAAa3E,QAAS,kBAAMrC,EAASF,EAAWC,KAAhD,SACA,qBAAK0I,MAAM,6BAA6BC,KAAK,QAAQC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAApF,SAAgG,sBAAMvD,EAAE,mVAG1G,cAAC,EAAD,CACEpF,KAAM8C,EACN8F,KAAMd,EACNrB,OAAQ,kBAAMsB,GAAa,UCiFpBc,GA9Ga,SAAC/J,GAE3B,IAAIe,EAAUa,cACd,EAAoCC,mBAAS,IAA7C,mBAAOmI,EAAP,KAAmBC,EAAnB,KACA,EAAkCpI,oBAAS,GAA3C,mBAAOmH,EAAP,KAAkBC,EAAlB,KACA,EAA8CpH,mBAAS,IAAvD,mBAAOqI,EAAP,KAAwBC,EAAxB,KACA,EAAyCtI,mBAAS,IAAlD,mBAAOuI,EAAP,KAAqBC,EAArB,KAGMnG,EAASoG,aAAY,SAACC,GAAD,OAAWA,EAAMjG,eAAtCJ,KA2BN,OALAhC,qBAAU,WAdY,IAACsI,EAgBjBH,EADW,KAAfL,EACqB9F,GAhBAsG,EAiBcR,EAhBhB9F,EAAKuG,QACtB,SAAC7G,GAAD,OACEA,EAAMqB,UAAUyF,cAAcC,SAASH,EAAYE,gBACnD9G,EAAMuB,SAASuF,cAAcC,SAASH,EAAYE,gBAClD9G,EAAM2B,MAAMmF,cAAcC,SAASH,EAAYE,gBAC/C9G,EAAMyB,MAAMqF,cAAcC,SAASH,EAAYE,gBAC/C9G,EAAM6B,QAAQ7B,MAAM8G,cAAcC,SAASH,EAAYE,gBACvD9G,EAAMiC,OAAO6E,cAAcC,SAASH,EAAYE,gBAChD9G,EAAMmC,QAAQ2E,cAAcC,SAASH,EAAYE,sBASpD,CAACV,EAAY9F,IAEd,qCACE,cAAC,GAAD,CAAcnD,QAASf,EAAMe,UAC7B,eAACwB,EAAA,EAAD,CAAWpC,UAAWC,IAAOoC,UAA7B,UACE,eAACC,EAAA,EAAD,CAAKtC,UAAWC,IAAOwK,OAAvB,UACE,cAAC3C,EAAA,EAAD,UACE,oBAAI9H,UAAWC,IAAOmH,MAAtB,4BAEF,cAACU,EAAA,EAAD,UACE,cAAClF,EAAA,EAAD,UACE,cAACA,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,YAAvC,SACE,cAACT,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,oBACZC,UAAU,KACVC,MAAOoG,EACPnG,SAAU,SAACZ,GAAD,OAAOgH,EAAchH,EAAEa,OAAOF,mBAMlD,eAACnB,EAAA,EAAD,WACE,eAACoI,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAApB,UACE,gCACE,qBAAIC,MAAO,CAAEC,YAAa,QAA1B,UACE,sCACA,4CACA,2CAEA,uCACA,8CACA,yCACA,+CAGJ,gCACGb,EAAatD,OAAS,GACrBsD,EAAa/D,KAAI,SAACC,EAAG4E,GAAJ,OACf,qBACE/K,UAAWC,IAAO+K,SAClB9H,QAAS,kBAAMtC,EAAQO,KAAR,oBAA0BgF,EAAEnC,MAC3CiH,cAAe,kBAjE/BjB,EAiE6D7D,QAhE7D2C,GAAa,IA6DC,UAKE,6BAAKiC,EAAQ,IACb,6BAAK5E,EAAErB,YACP,6BAAKqB,EAAEnB,WACP,6BAAKmB,EAAEf,QACP,6BAAKe,EAAEjB,QACP,+BACGiB,EAAET,OADL,KACeS,EAAEb,QAAQ7B,SAEzB,6BAAK0C,EAAEP,qBAKQ,IAAxBqE,EAAatD,QACZ,qBAAK3G,UAAWC,IAAOiL,OAAvB,SACE,oDAIN,cAAC,EAAD,CACEnK,KAAM8C,EACNE,KAAMgG,EACNJ,KAAMd,EACNrB,OAAQ,kBAAMsB,GAAa,a,oBCyKtBqC,GAvQa,SAACtL,GAC3B,IAAMgB,EAAWW,cACbZ,EAAUa,cAEF2J,EAAcvL,EAAMwL,MAAMC,OAA9BtH,GAEIuH,EAAiBpB,aAAY,SAACC,GAAD,OAAWA,EAAMjG,eAApDJ,KAGN,EAAkCrC,mBAAS,CACzC+B,MAAO,GACPoB,SAAS,EACTH,QAAS,wDAHX,mBAAOI,EAAP,KAAkBC,EAAlB,KAKA,EAAgCrD,mBAAS,CACvC+B,MAAO,GACPoB,SAAS,EACTH,QAAS,uDAHX,mBAAOM,EAAP,KAAiBC,EAAjB,KAKA,EAA0BvD,mBAAS,CACjC+B,MAAO,GACPoB,SAAS,EACTH,QAAS,wDAHX,mBAAOQ,EAAP,KAAcC,EAAd,KAKA,EAA0BzD,mBAAS,IAAnC,mBAAO0D,EAAP,KAAcC,EAAd,KACA,EAA8B3D,mBAAS,IAAvC,mBAAO4D,EAAP,KAAgBC,EAAhB,KACA,EAAsC7D,mBAAS,IAA/C,mBAAO8D,EAAP,KAAoBC,EAApB,KACA,EAA4B/D,mBAAS,IAArC,mBAAOgE,EAAP,KAAeC,EAAf,KACA,EAA8BjE,mBAAS,IAAvC,oBAAOkE,GAAP,MAAgBC,GAAhB,MAcMC,GAAc,uCAAG,gCAAAhF,EAAA,sEACEiF,IAAMC,IAAI,wCADZ,gBACbjC,EADa,EACbA,KACJkC,EAAclC,EAAKmC,KAAI,SAACC,GAC1B,MAAO,CAAEC,KAAMD,EAAEC,KAAMC,YAAaF,EAAEG,aAAa,OAErDb,EAAeQ,GALM,2CAAH,qDAedM,GAAe,SAACC,EAAQJ,GAC5B,IAAIK,EAAQ,iBACA,SAARL,EACFK,EAAMC,KAAKF,GACNzB,EAAa,2BAAKD,GAAN,IAAiBD,SAAS,KACvCE,EAAa,2BAAKD,GAAN,IAAiBrB,MAAO+C,EAAQ3B,SAAS,KAEzD4B,EAAMC,KAAKF,GACPvB,EAAY,2BAAKD,GAAN,IAAgBH,SAAS,KACpCI,EAAY,2BAAKD,GAAN,IAAgBvB,MAAO+C,EAAQ3B,SAAS,MAK3D9C,qBAAU,WACe,IAAvByD,EAAYmB,QAAgBb,KAC5B,IAzCoB/B,EAyChBgH,EAAQQ,EAAalH,WAAU,SAAC8B,GAAD,OAAOA,EAAEnC,KAAOoH,KACnD,GAAIL,EAAQ,EACV,OAAOnK,EAAQO,KAAK,aAGtB4J,GAAS,IA9CWhH,EA8COwH,EAAaR,GA7CxChG,EAAa,2BAAKD,GAAN,IAAiBrB,MAAOM,EAAKe,aACzCG,EAAY,2BAAKD,GAAN,IAAgBvB,MAAOM,EAAKiB,YACvCG,EAAS,2BAAKD,GAAN,IAAazB,MAAOM,EAAKmB,SACjCG,EAAStB,EAAKqB,OACdO,EAAU5B,EAAK2B,QACfG,GAAW9B,EAAK6B,SAChBL,EAAWxB,EAAKuB,YAwCf,CAACiG,EAAc3K,EAASwK,EAAW5F,EAAYmB,SAqBlD,OADAtF,QAAQC,IAAI4D,GAEV,qCACE,cAAC,GAAD,CAActE,QAASf,EAAMe,UAC7B,eAACwB,EAAA,EAAD,CAAWpC,UAAWC,KAAOoC,UAA7B,UACE,cAACC,EAAA,EAAD,UACE,sBACEtC,UAAWC,KAAOuL,cAClBtI,QAAS,kBAAMtC,EAAQO,KAAK,cAF9B,UAIE,qBACEmI,MAAM,6BACNE,MAAM,KACNC,OAAO,KACPF,KAAK,UACLG,QAAQ,YALV,SAOE,sBAAMvD,EAAE,2EAEV,sBAAMnG,UAAWC,KAAOwL,SAAxB,uBAGJ,cAACnJ,EAAA,EAAD,CAAKtC,UAAWC,KAAOwK,OAAvB,SACE,cAAC3C,EAAA,EAAD,UACE,qBAAI9H,UAAWC,KAAOmH,MAAtB,UAA8BtC,EAAUrB,MAAxC,oBAGJ,cAACnB,EAAA,EAAD,UACE,cAACwF,EAAA,EAAD,UACE,eAAClF,EAAA,EAAD,CAAMC,SA9CM,SAACC,GAErBA,EAAEC,iBAEA,IAAM2I,EAAa,CACjB5G,UAAUA,EAAUrB,MACpBuB,SAASA,EAASvB,MAClB2B,QACAF,MAAOA,EAAMzB,MACb6B,UACAI,SACAE,YAEF/E,EAASiD,EAAY4H,EAAYN,IACjCxK,EAAQO,KAAK,cAgCwBnB,UAAWC,KAAO0C,cAAjD,UACE,eAACC,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,YAAvC,UACE,eAACT,EAAA,EAAK6E,MAAN,yBAEI3C,EAAUD,SACZ,uBAAM7E,UAAWC,KAAOyH,MAAxB,eAAkC5C,EAAUJ,cAG9C,cAAC9B,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,mBACZC,UAAU,KACVC,MAAOqB,EAAUrB,MACjBC,SAAU,SAACZ,GAAD,OACRiC,EAAa,2BAAKD,GAAN,IAAiBrB,MAAOX,EAAEa,OAAOF,UAE/CkE,OAAQ,SAAC7E,GAAD,OAAOyD,GAAazD,EAAEa,OAAOF,MAAO,UAC5CmE,UAAQ,OAGZ,eAAChF,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,WAAvC,UACE,eAACT,EAAA,EAAK6E,MAAN,wBACEzC,EAASH,SACT,uBAAM7E,UAAWC,KAAOyH,MAAxB,eAAkC1C,EAASN,cAG7C,cAAC9B,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,kBACZC,UAAU,KACVC,MAAOuB,EAASvB,MAChBC,SAAU,SAACZ,GAAD,OACRmC,EAAY,2BAAKD,GAAN,IAAgBvB,MAAOX,EAAEa,OAAOF,UAE7CkE,OAAQ,SAAC7E,GAAD,OAAOyD,GAAazD,EAAEa,OAAOF,MAAO,SAC5CmE,UAAQ,OAIZ,eAAChF,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,QAAvC,UACE,cAACT,EAAA,EAAK6E,MAAN,4BACA,cAAC7E,EAAA,EAAKU,QAAN,CACEvC,KAAK,QACLwC,YAAY,cACZE,MAAO2B,EACP1B,SAAU,SAACZ,GAAD,OAAOuC,EAASvC,EAAEa,OAAOF,QACnCmE,UAAQ,IAEV,cAAChF,EAAA,EAAKiF,KAAN,CAAW7H,UAAU,aAArB,+DAIF,eAAC4C,EAAA,EAAKQ,MAAN,CAAYpD,UAAU,OAAOqD,UAAU,UAAvC,UACE,cAACT,EAAA,EAAK6E,MAAN,sBACA,eAACnF,EAAA,EAAD,WACE,cAACwF,EAAA,EAAD,UACE,cAAC,IAAD,CACEvE,YAAY,iBACZE,MAAO6B,EACP5B,SAAU,SAACqE,GAAD,OAAYxC,EAAWwC,IACjCC,QAASxC,EAAYU,KAAI,SAAC+B,GACxB,MAAO,CACLxE,MAAOwE,EAAE7B,KACT8B,MAAOD,EAAE7B,KACT+B,KAAMF,EAAE5B,oBAKhB,cAACyB,EAAA,EAAD,UACE,cAAClF,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,oBACZE,MAAOiC,EACPhC,SAAU,SAACZ,GAAD,OAAO6C,EAAU7C,EAAEa,OAAOF,QACpCmE,UAAQ,MAGZ,cAACE,EAAA,EAAD,UACE,cAAClF,EAAA,EAAKU,QAAN,CACEvC,KAAK,OACLwC,YAAY,gBACZE,MAAOmC,GACPlC,SAAU,SAACZ,GAAD,OAAO+C,GAAW/C,EAAEa,OAAOF,QACrCmE,UAAQ,YAKhB,wBAAOQ,QAAQ,YAAf,0BACElD,EAAML,SACN,uBAAM7E,UAAWC,KAAOyH,MAAxB,eAAkCxC,EAAMR,cAE1C,eAAC2D,EAAA,EAAD,CAAYrI,UAAU,OAAtB,UACE,cAACqI,EAAA,EAAWC,QAAZ,CAAoBvI,MAAO,CAACwI,UAAU,OAAtC,SACGjD,GACC,eAAC+C,EAAA,EAAWR,KAAZ,CAAiB7D,GAAG,eAApB,cACIsB,EAAQ6C,UAIhB,cAACK,EAAA,EAAD,CACAzI,MAAO,CAACwI,UAAU,OAChBxH,KAAK,SACLwC,YAAY,qBACZC,UAAU,KACVC,MAAOyB,EAAMzB,MAEbC,SAAU,SAACZ,GA1LC,IAACW,KA0LwBX,EAAEa,OAAOF,OAzLtDgF,QAAQ,UAAW,IAAI9B,OAAS,IACtClD,EAAMgF,QAAQ,UAAW,IAAI9B,OAAS,GAClCxB,EAAS,2BAAKD,GAAN,IAAazB,MAAOA,EAAOoB,SAAS,KAC5CM,EAAS,2BAAKD,GAAN,IAAazB,MAAOA,EAAOoB,SAAS,MAuLlC+C,UAAQ,OAIZ,cAAChF,EAAA,EAAKQ,MAAN,UACE,sBAAKpD,UAAWC,KAAOmJ,YAAvB,UACE,cAAC,EAAD,CAAcrI,KAAK,SAAS6C,UAAWkB,EAAUD,UAAYG,EAASH,UAAYK,EAAML,QAAxF,SAAkG,iBAClG,cAAC,EAAD,CACE9E,MAAO,CAAE4L,gBAAiB,UAAWC,OAAQ,QAC7C1I,QAAS,WJpMA,IAACc,EIqMRnD,GJrMQmD,EIqMeoH,EJrMhB,uCAAQ,WAAOvK,EAAUoD,GAAjB,iBAAAnD,EAAA,sDACnC,IAEQoD,EAAYD,IAAWE,YAAYJ,KAEzClD,EAAS,CACPE,KAAMT,KAGF8D,EAAgBF,EAAUG,WAAU,SAACC,GAAD,OAAaA,EAAQN,KAAOA,OAEjD,IACnBE,EAAU2H,OAAOzH,EAAc,GAC/BvD,EAAS,CACPE,KAAMP,EACNgE,QAASN,KAGb,MAAO9C,GACPC,QAAQC,IAAIF,GAnBqB,2CAAR,0DIsMPR,EAAQO,KAAK,cAJjB,SAOG,sCC3PN2K,OAZf,WACE,OACE,8BACE,eAAC,IAAD,CAAQC,SAAS,YAAjB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW1K,EAAe2K,OAAK,IAC/C,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWrC,GAAqBsC,OAAK,IAC7D,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWd,GAAqBe,OAAK,U,2BCLnEC,GAAUC,2BAAgB,CAC9BjI,YCC4B,WAAgC,IAA/BiG,EAA8B,uDAAtB,CAACrG,KAAK,IAAKsI,EAAW,uCAC3D,OAAQA,EAAOtL,MACb,KAAKX,EACH,OAAO,2BAAKgK,GAAZ,IAAmBkC,SAAS,IAC9B,KAAKjM,EACH,OAAO,2BAAK+J,GAAZ,IAAmBrG,KAAMsI,EAAO7H,UAChC,KAAKlE,EACL,OAAO,2BAAK8J,GAAZ,IAAmBkC,SAAS,IAC9B,KAAK/L,EAEH,KAAKC,EACL,OAAO,2BAAK4J,GAAZ,IAAmBrG,KAAMsI,EAAO7H,UAChC,KAAK/D,EACL,OAAO,2BAAK2J,GAAZ,IAAmBrG,KAAM,KAC3B,QACE,OAAOqG,IDfXmC,KEPyB,WAAyB,IAAxBnC,EAAuB,uDAAf,GAAIiC,EAAW,uCACjD,OAAQA,EAAOtL,MACb,KAAKL,EACH,OAAO,2BAAK0J,GAAZ,IAAmBrG,KAAM,OAC3B,QACE,OAAOqG,MFKPoC,GAAa,CAACC,MAMLC,GALDC,uBACZR,GAHmB,CAAEhI,YAAa,CAAEJ,KAAM,IAAMwI,KAAM,IAKtDK,+BAAoBC,mBAAe,WAAf,EAAmBL,MGPzCM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,U,mBCX1BC,EAAOC,QAAU,CAAC,UAAY,iCAAiC,OAAS,8BAA8B,MAAQ,6BAA6B,cAAgB,qCAAqC,SAAW,gCAAgC,YAAc,mCAAmC,MAAQ,+B,mBCApSD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,MAAQ,6B,mBCA5GD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,eAAiB,sCAAsC,eAAiB,sCAAsC,cAAgB,qCAAqC,UAAY,mC,mBCA9OD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+BAA+B,MAAQ,8BAA8B,OAAS,+BAA+B,SAAW,mC,mBCAjMD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,UAAY,0BAA0B,YAAc,8B,mBCAxID,EAAOC,QAAU,CAAC,OAAS,gC","file":"static/js/main.453cfef8.chunk.js","sourcesContent":["import { Button } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport styles from \"./customButton.module.css\";\r\nconst CustomButton = (props) => {\r\n  return (\r\n    <Button style={{...props.style}} className={styles.button} {...props}>\r\n      {props.children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","export const ADD_PATIENT_REQUEST=\"ADD_PATIENT_REQUEST\"\r\nexport const ADD_PATIENT_SUCCESS = \"ADD_PATIENT_SUCCESS\";\r\nexport const ADD_PATIENT_FAIL = \"ADD_PATIENT_FAIL\";\r\nexport const EDIT_PATIENT_REQUEST = \"EDIT_PATIENT_REQUEST\";\r\nexport const EDIT_PATIENT_SUCCESS = \"EDIT_PATIENT_SUCCESS\";\r\nexport const EDIT_PATIENT_FAIL = \"EDIT_PATIENT_FAIL\";\r\nexport const DELETE_PATIENT=\"DELETE_PATIENT\"\r\nexport const RESET_DATA=\"RESET_DATA\"","\r\nexport const USER_LOGOUT=\"USER_LOGOUT\"","import { RESET_DATA } from \"../constants/patientConstants\";\r\nimport { USER_LOGOUT } from \"../constants/userConstants\";\r\nexport const userLogout = (history) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_DATA,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGOUT,\r\n    });\r\n    window.localStorage.clear();\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CustomButton from \"../../components/Button/CustomButton\";\r\nimport styles from \"./landingScreen.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userLogout } from \"../../actions/userActions\";\r\nconst LandingScreen = () => {\r\n  //to dispatch actions to reducers\r\n  const dispatch = useDispatch();\r\n  //using history to navigate between pages\r\n  let history = useHistory();\r\n\r\n  //page states\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n\r\n  //submit handler for login\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"User\", JSON.stringify({ userName }));\r\n    history.push(\"/patients\");\r\n  };\r\n  //generic logout handler\r\n  const logoutHandler = () => {\r\n    dispatch(userLogout(history));\r\n    setLoggedUser(\"\");\r\n  };\r\n  //checking if user is already logged in\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"User\"));\r\n    if (userData) {\r\n      setLoggedUser(userData.userName);\r\n    }\r\n  }, [setLoggedUser]);\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Row>\r\n        <div className={styles.innerContainer}>\r\n          <Row>\r\n            <div className={styles.imageContainer}>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/4/41/AliveCor_Logo_PNG.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </div>\r\n          </Row>\r\n          <Row className={styles.formContainer}>\r\n            <Form onSubmit={submitHandler}>\r\n              {!loggedUser ? (\r\n                <>\r\n                  <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Name to Continue\"\r\n                      maxLength=\"20\"\r\n                      value={userName}\r\n                      onChange={(e) => setUserName(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <CustomButton type=\"submit\" disabled={userName === \"\"}>\r\n                    Continue\r\n                  </CustomButton>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <CustomButton onClick={() => history.push(\"/patients\")}>\r\n                    Continue as {loggedUser}\r\n                  </CustomButton>\r\n                  <p\r\n                    className={styles.mutedText}\r\n                    onClick={() => logoutHandler()}\r\n                  >\r\n                    Logout, Start afresh?\r\n                  </p>\r\n                </>\r\n              )}\r\n            </Form>\r\n          </Row>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LandingScreen;\r\n","export const modalConstants={\r\n    EDIT:'EDIT',\r\n    CREATE:'CREATE'\r\n}","import {\r\n  EDIT_PATIENT_SUCCESS,\r\n  EDIT_PATIENT_REQUEST,\r\n  ADD_PATIENT_FAIL,\r\n  EDIT_PATIENT_FAIL,\r\n  ADD_PATIENT_REQUEST,\r\n  ADD_PATIENT_SUCCESS,\r\n  DELETE_PATIENT,\r\n} from \"../constants/patientConstants\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport const addPatient = (data) => async (dispatch, getState) => {\r\n  try {\r\n    //cherry picking existing data from the state\r\n    const tableData = getState().patientData.data;\r\n    //state to request before api call\r\n    dispatch({\r\n      type: ADD_PATIENT_REQUEST,\r\n    });\r\n    //add data to the existing array of data (supposed to be an api call)\r\n    //using uuid in order to uniquely identify every patient\r\n    tableData.push({ ...data, id: uuidv4() });\r\n    dispatch({\r\n      type: ADD_PATIENT_SUCCESS,\r\n      payload: tableData,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: ADD_PATIENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editPatient = (data, id) => async (dispatch, getState) => {\r\n  try {\r\n    //cherry picking existing data from the state\r\n    const tableData = getState().patientData.data;\r\n    //state to request before api call\r\n    dispatch({\r\n      type: EDIT_PATIENT_REQUEST,\r\n    });\r\n    //add data to the existing array of data (supposed to be an api call)\r\n    const elementsIndex = tableData.findIndex((element) => element.id === id);\r\n    if (elementsIndex >= 0) {\r\n      let newTableData = [...tableData];\r\n      newTableData[elementsIndex] = {id,...data};\r\n      dispatch({\r\n        type: EDIT_PATIENT_SUCCESS,\r\n        payload: newTableData,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: EDIT_PATIENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePatient = (id) => async (dispatch, getState) => {\r\n  try {\r\n    //cherry picking existing data from the state\r\n    const tableData = getState().patientData.data;\r\n    //state to request before api call\r\n    dispatch({\r\n      type: EDIT_PATIENT_REQUEST,\r\n    });\r\n    //add data to the existing array of data (supposed to be an api call)\r\n    const elementsIndex = tableData.findIndex((element) => element.id === id);\r\n    \r\n    if (elementsIndex >= 0) {\r\n      tableData.splice(elementsIndex,1);\r\n      dispatch({\r\n        type: DELETE_PATIENT,\r\n        payload: tableData,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Form,\r\n  Modal,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport styles from \"./editPatient.module.css\";\r\nimport { editPatient, addPatient } from \"../../actions/patientActions\";\r\nimport { modalConstants } from \"../../constants/modalConstants\";\r\nimport CustomButton from \"../Button/CustomButton\";\r\n\r\nconst EditPatient = (props) => {\r\n  const dispatch = useDispatch();\r\n  //destructuring props\r\n  const { type, data: existingPatientData } = props;\r\n  //states to handle inputs\r\n  const [firstName, setFirstName] = useState({\r\n    value: \"\",\r\n    isValid: true,\r\n    message: \"Please check your First Name for special characters\",\r\n  });\r\n  const [lastName, setLastName] = useState({\r\n    value: \"\",\r\n    isValid: true,\r\n    message: \"Please check your Last Name for special characters\",\r\n  });\r\n  const [phone, setPhone] = useState({\r\n    value: \"\",\r\n    isValid: true,\r\n    message: \"Please check your Phone Number. It must be 10 digits\",\r\n  });\r\n  const [email, setEmail] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [pinCode, setPinCode] = useState(\"\");\r\n\r\n  //cleanup function\r\n  const clearInputs = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    setCountry(\"\");\r\n    setStreet(\"\");\r\n    setPinCode(\"\");\r\n    setCountry(\"\");\r\n  };\r\n\r\n  //if data is existing in props\r\n  const populateData = (data) => {\r\n    setFirstName({ ...firstName, value: data.firstName });\r\n    setLastName({ ...lastName, value: data.lastName });\r\n    setPhone({ ...phone, value: data.phone });\r\n    setEmail(data.email);\r\n    setStreet(data.street);\r\n    setPinCode(data.pinCode);\r\n    setCountry(data.country);\r\n  };\r\n  //fetching countries\r\n  const fetchCountries = async () => {\r\n    const { data } = await axios.get(\"https://restcountries.eu/rest/v2/all\");\r\n    let countryData = data.map((d) => {\r\n      return { name: d.name, callingCode: d.callingCodes[0] };\r\n    });\r\n    setCountryList(countryData);\r\n  };\r\n  //validating phone number\r\n  const validatePhoneNumber = (value) => {\r\n    value.replace(/[^0-9]/g, \"\").length < 10 ||\r\n    value.replace(/[^0-9]/g, \"\").length > 10\r\n      ? setPhone({ ...phone, value: value, isValid: false })\r\n      : setPhone({ ...phone, value: value, isValid: true });\r\n  };\r\n  //validating name\r\n  const validateName = (string, name) => {\r\n    var regex = /[^A-Z a-z0-9]/g;\r\n    if (name == \"first\") {\r\n      regex.test(string)\r\n        ? (setFirstName({ ...firstName, isValid: false }) )\r\n        : setFirstName({ ...firstName, value: string, isValid: true });\r\n    } else {\r\n      regex.test(string)\r\n        ? setLastName({ ...lastName, isValid: false })\r\n        : setLastName({ ...lastName, value: string, isValid: true });\r\n    }\r\n  };\r\n\r\n  //global submit handler\r\n  const submitHandler = (e) => {\r\n    //stopping event propogation to reload the page\r\n    e.preventDefault();\r\n  \r\n      const data = {\r\n        firstName:firstName.value,\r\n        lastName:lastName.value,\r\n        email,\r\n        phone: phone.value,\r\n        country,\r\n        street,\r\n        pinCode,\r\n      };\r\n      type === modalConstants.EDIT\r\n        ? dispatch(editPatient(data, existingPatientData.id))\r\n        : dispatch(addPatient(data));\r\n      //cleanup\r\n      clearInputs();\r\n      props.onHide();\r\n    \r\n  };\r\n  useEffect(() => {\r\n    countryList.length === 0 && fetchCountries();\r\n    if (type === modalConstants.EDIT) {\r\n      populateData(existingPatientData);\r\n    }\r\n  }, [existingPatientData]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className={styles.mainContainer}\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header className={styles.modalHeader}>\r\n          <Modal.Title\r\n            id=\"contained-modal-title-vcenter\"\r\n            className={styles.title}\r\n          >\r\n            {type === modalConstants.EDIT ? \"Edit\" : \"Create\"} Patient\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n              <Form.Label>First Name  {!firstName.isValid && (\r\n                  <span className={styles.alert}>* {firstName.message}</span>\r\n                )}</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter First Name\"\r\n                maxLength=\"20\"\r\n                value={firstName.value}\r\n                onChange={(e) =>\r\n                  setFirstName({ ...firstName, value: e.target.value })\r\n                }\r\n                onBlur={(e) => validateName(e.target.value, \"first\")}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"lastName\">\r\n              <Form.Label>Last Name {!lastName.isValid && (\r\n                  <span className={styles.alert}>* {lastName.message}</span>\r\n                )}</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Last Name\"\r\n                maxLength=\"20\"\r\n                value={lastName.value}\r\n                onChange={(e) =>\r\n                  setLastName({ ...lastName, value: e.target.value })\r\n                }\r\n                onBlur={(e) => validateName(e.target.value, \"last\")}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"Address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Row>\r\n                <Col>\r\n                  <Select\r\n                    placeholder=\"Select Country\"\r\n                    value={country}\r\n                    onChange={(option) => setCountry(option)}\r\n                    options={countryList.map((c) => {\r\n                      return {\r\n                        value: c.name,\r\n                        label: c.name,\r\n                        code: c.callingCode,\r\n                      };\r\n                    })}\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Street Name\"\r\n                    value={street}\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Pincode\"\r\n                    value={pinCode}\r\n                    onChange={(e) => setPinCode(e.target.value)}\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n            <label htmlFor=\"basic-url\">Phone Number   {!phone.isValid && (\r\n                <span className={styles.alert}>* {phone.message}</span>\r\n              )}</label>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend style={{marginTop:'5px'}}>\r\n                {country && (\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    +{country.code}\r\n                  </InputGroup.Text>\r\n                )}\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n              style={{marginTop:'5px'}}\r\n                type=\"number\"\r\n                placeholder=\"Enter Phone Number\"\r\n                value={phone.value}\r\n                onChange={(e) => validatePhoneNumber(e.target.value)}\r\n                maxLength=\"10\"\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <CustomButton type=\"submit\"  disabled={!country || !firstName.isValid || !lastName.isValid || !phone.isValid}>\r\n              {type === modalConstants.EDIT ? \"Save Changes\" : \"Submit\"}\r\n            </CustomButton>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CustomButton onClick={props.onHide}>Close</CustomButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPatient;\r\n","import React from \"react\";\r\nimport { Form, Navbar } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { modalConstants } from \"../../constants/modalConstants\";\r\nimport EditPatient from \"../EditPatientModal/EditPatient\";\r\nimport styles from \"./navbar.module.css\";\r\n\r\nimport { userLogout } from \"../../actions/userActions\";\r\nconst CustomNavbar = () => {\r\n  //dispatch actions to reducer\r\n  const dispatch = useDispatch();\r\n  //using history navigate between pages\r\n  let history = useHistory();\r\n  //state to handle modal visibility\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  return (\r\n    <Navbar className={styles.container}>\r\n      <Navbar.Brand className={styles.logo} onClick={() => history.push(\"/\")}>\r\n        <h4>AliveCor</h4>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className={styles.buttonGroup}>\r\n        <Form></Form>\r\n        <Navbar.Text\r\n          onClick={() => setModalShow(true)}\r\n          className={styles.addButton}\r\n        >\r\n          <h6>Add Patient</h6>\r\n        </Navbar.Text>\r\n        <Navbar.Text onClick={() => dispatch(userLogout(history))}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M10 9.408l2.963 2.592-2.963 2.592v-1.592h-8v-2h8v-1.592zm-2-4.408v4h-8v6h8v4l8-7-8-7zm6-3c-1.787 0-3.46.474-4.911 1.295l.228.2 1.396 1.221c1.004-.456 2.114-.716 3.287-.716 4.411 0 8 3.589 8 8s-3.589 8-8 8c-1.173 0-2.283-.26-3.288-.715l-1.396 1.221-.228.2c1.452.82 3.125 1.294 4.912 1.294 5.522 0 10-4.477 10-10s-4.478-10-10-10z\"/></svg>\r\n        </Navbar.Text>\r\n      </Navbar.Collapse>\r\n      <EditPatient\r\n        type={modalConstants.CREATE}\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Container, Form, Row, Table } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./patientListing.module.css\";\r\nimport { modalConstants } from \"../../constants/modalConstants\";\r\nimport EditPatient from \"../../components/EditPatientModal/EditPatient\";\r\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\r\nconst PatientLisingScreen = (props) => {\r\n  //usage of history to navigate between pages\r\n  let history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [selectedPatient, setSelectedPatient] = useState({});\r\n  const [filteredData, setFilteredtData] = useState([]);\r\n\r\n  //cherry-picking from glbal state (redux)\r\n  let { data } = useSelector((state) => state.patientData);\r\n\r\n  //this opens up a modal on click of a table row\r\n  const editPatientModalHandler = (patientData) => {\r\n    setSelectedPatient(patientData);\r\n    setModalShow(true);\r\n  };\r\n  //global filter handler\r\n  const filterHandler = (searchInput) => {\r\n    let filteredData = data.filter(\r\n      (value) =>\r\n        value.firstName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.lastName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.email.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.phone.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.country.value.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.street.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.pinCode.toLowerCase().includes(searchInput.toLowerCase())\r\n    );\r\n    return filteredData;\r\n  };\r\n  //checking if there is any change in searchText to filter data\r\n  useEffect(() => {\r\n    searchText === \"\"\r\n      ? setFilteredtData(data)\r\n      : setFilteredtData(filterHandler(searchText));\r\n  }, [searchText, data]);\r\n  return (\r\n    <>\r\n      <CustomNavbar history={props.history} />\r\n      <Container className={styles.container}>\r\n        <Row className={styles.header}>\r\n          <Col>\r\n            <h3 className={styles.title}>Patient List</h3>\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search Patient...\"\r\n                  maxLength=\"20\"\r\n                  value={searchText}\r\n                  onChange={(e) => setSearchText(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table striped hover>\r\n            <thead>\r\n              <tr sytle={{ borderColor: \"blue\" }}>\r\n                <th>S.NO</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n\r\n                <th>Email</th>\r\n                <th>Phone Number</th>\r\n                <th>Address</th>\r\n                <th>Pin Code</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredData.length > 0 &&\r\n                filteredData.map((d, index) => (\r\n                  <tr\r\n                    className={styles.tableRow}\r\n                    onClick={() => history.push(`/patients/${d.id}`)}\r\n                    onDoubleClick={() => editPatientModalHandler(d)}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{d.firstName}</td>\r\n                    <td>{d.lastName}</td>\r\n                    <td>{d.email}</td>\r\n                    <td>{d.phone}</td>\r\n                    <td>\r\n                      {d.street}, {d.country.value}\r\n                    </td>\r\n                    <td>{d.pinCode}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          {filteredData.length === 0 && (\r\n            <div className={styles.noData}>\r\n              <h4>No data found</h4>\r\n            </div>\r\n          )}\r\n        </Row>\r\n        <EditPatient\r\n          type={modalConstants.EDIT}\r\n          data={selectedPatient}\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientLisingScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\r\nimport styles from \"./patientDetail.module.css\";\r\nimport CustomButton from \"../../components/Button/CustomButton\";\r\nimport { deletePatient, editPatient } from \"../../actions/patientActions\";\r\nconst PatientDetailScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  //destructuring props\r\n  const { id: patientId } = props.match.params;\r\n  //cherry-picking state data to populate page\r\n  let { data: patientsData } = useSelector((state) => state.patientData);\r\n\r\n  //states to handle inputs\r\n  const [firstName, setFirstName] = useState({\r\n    value: \"\",\r\n    isValid: true,\r\n    message: \"Please check your First Name for special characters\",\r\n  });\r\n  const [lastName, setLastName] = useState({\r\n    value: \"\",\r\n    isValid: true,\r\n    message: \"Please check your Last Name for special characters\",\r\n  });\r\n  const [phone, setPhone] = useState({\r\n    value: \"\",\r\n    isValid: true,\r\n    message: \"Please check your Phone Number.It must be 10 digits\",\r\n  });\r\n  const [email, setEmail] = useState('');\r\n  const [country, setCountry] = useState(\"\");\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [pinCode, setPinCode] = useState(\"\");\r\n\r\n\r\n  //if data is existing in props\r\n  const populateData = (data) => {\r\n    setFirstName({ ...firstName, value: data.firstName });\r\n    setLastName({ ...lastName, value: data.lastName });\r\n    setPhone({ ...phone, value: data.phone });\r\n    setEmail(data.email);\r\n    setStreet(data.street);\r\n    setPinCode(data.pinCode);\r\n    setCountry(data.country);\r\n  };\r\n  //fetching countries\r\n  const fetchCountries = async () => {\r\n    const { data } = await axios.get(\"https://restcountries.eu/rest/v2/all\");\r\n    let countryData = data.map((d) => {\r\n      return { name: d.name, callingCode: d.callingCodes[0] };\r\n    });\r\n    setCountryList(countryData);\r\n  };\r\n  //validating phone number\r\n  const validatePhoneNumber = (value) => {\r\n    value.replace(/[^0-9]/g, \"\").length < 10 ||\r\n    value.replace(/[^0-9]/g, \"\").length > 10\r\n      ? setPhone({ ...phone, value: value, isValid: false })\r\n      : setPhone({ ...phone, value: value, isValid: true });\r\n  };\r\n  //validating name\r\n  const validateName = (string, name) => {\r\n    var regex = /[^A-Z a-z0-9]/g;\r\n    if (name == \"first\") {\r\n      regex.test(string)\r\n        ? (setFirstName({ ...firstName, isValid: false }) )\r\n        : setFirstName({ ...firstName, value: string, isValid: true });\r\n    } else {\r\n      regex.test(string)\r\n        ? setLastName({ ...lastName, isValid: false })\r\n        : setLastName({ ...lastName, value: string, isValid: true });\r\n    }\r\n  };\r\n\r\n  //populating patient data after fetching from state\r\n  useEffect(() => {\r\n    countryList.length === 0 && fetchCountries();\r\n    let index = patientsData.findIndex((d) => d.id === patientId);\r\n    if (index < 0) {\r\n      return history.push(\"/patients\");\r\n    }\r\n\r\n    index > -1 && populateData(patientsData[index]);\r\n  }, [patientsData, history, patientId, countryList.length]);\r\n\r\n  //global submit handler\r\n  const submitHandler = (e) => {\r\n    //stopping event propogation to reload the page\r\n    e.preventDefault();\r\n    \r\n      const dataToSave = {\r\n        firstName:firstName.value,\r\n        lastName:lastName.value,\r\n        email,\r\n        phone: phone.value,\r\n        country,\r\n        street,\r\n        pinCode,\r\n      };\r\n      dispatch(editPatient(dataToSave, patientId));\r\n      history.push(\"/patients\");\r\n    \r\n  };\r\n  console.log(phone);\r\n  return (\r\n    <>\r\n      <CustomNavbar history={props.history} />\r\n      <Container className={styles.container}>\r\n        <Row>\r\n          <div\r\n            className={styles.backContainer}\r\n            onClick={() => history.push(\"/patients\")}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"#2D9F86\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\" />\r\n            </svg>\r\n            <span className={styles.backText}>Back</span>\r\n          </div>\r\n        </Row>\r\n        <Row className={styles.header}>\r\n          <Col>\r\n            <h3 className={styles.title}>{firstName.value}'s Details</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form onSubmit={submitHandler} className={styles.formContainer}>\r\n              <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n                <Form.Label>\r\n                  First Name\r\n                  {!firstName.isValid && (\r\n                  <span className={styles.alert}>* {firstName.message}</span>\r\n                )}\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter First Name\"\r\n                  maxLength=\"20\"\r\n                  value={firstName.value}\r\n                  onChange={(e) =>\r\n                    setFirstName({ ...firstName, value: e.target.value })\r\n                  }\r\n                  onBlur={(e) => validateName(e.target.value, \"first\")}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"lastName\">\r\n                <Form.Label>Last Name\r\n                {!lastName.isValid && (\r\n                  <span className={styles.alert}>* {lastName.message}</span>\r\n                )}\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  maxLength=\"20\"\r\n                  value={lastName.value}\r\n                  onChange={(e) =>\r\n                    setLastName({ ...lastName, value: e.target.value })\r\n                  }\r\n                  onBlur={(e) => validateName(e.target.value, \"last\")}\r\n                  required\r\n                />\r\n                \r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"Address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Row>\r\n                  <Col>\r\n                    <Select\r\n                      placeholder=\"Select Country\"\r\n                      value={country}\r\n                      onChange={(option) => setCountry(option)}\r\n                      options={countryList.map((c) => {\r\n                        return {\r\n                          value: c.name,\r\n                          label: c.name,\r\n                          code: c.callingCode,\r\n                        };\r\n                      })}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Street Name\"\r\n                      value={street}\r\n                      onChange={(e) => setStreet(e.target.value)}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Pincode\"\r\n                      value={pinCode}\r\n                      onChange={(e) => setPinCode(e.target.value)}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <label htmlFor=\"basic-url\">Phone Number\r\n              {!phone.isValid && (\r\n                <span className={styles.alert}>* {phone.message}</span>\r\n              )}</label>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend style={{marginTop:'5px'}}>\r\n                  {country && (\r\n                    <InputGroup.Text id=\"basic-addon1\">\r\n                      +{country.code}\r\n                    </InputGroup.Text>\r\n                  )}\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                style={{marginTop:'5px'}}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Phone Number\"\r\n                  maxLength=\"10\"\r\n                  value={phone.value}\r\n                  // onChange={(e)=>setPhone({...phone,isValid:true})\r\n                  onChange={(e) => validatePhoneNumber(e.target.value)}\r\n                  required\r\n                />\r\n              </InputGroup>\r\n             \r\n              <Form.Group>\r\n                <div className={styles.buttonGroup}>\r\n                  <CustomButton type=\"submit\" disabled={!firstName.isValid || !lastName.isValid || !phone.isValid}>{\"Save Changes\"}</CustomButton>\r\n                  <CustomButton\r\n                    style={{ backgroundColor: \"#CB4C4E\", border: \"none\" }}\r\n                    onClick={() => {\r\n                      dispatch(deletePatient(patientId));\r\n                      history.push(\"/patients\");\r\n                    }}\r\n                  >\r\n                    {\"Delete Patient\"}\r\n                  </CustomButton>\r\n                </div>\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientDetailScreen;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport LandingScreen from \"./screens/LandingScreen/LandingScreen\";\r\nimport PatientLisingScreen from \"./screens/PatientLisingScreen/PatientListingScreen\";\r\nimport PatientDetailScreen from \"./screens/PatientDetailScreen/PatientDetailScreen\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/AliveCor\">\r\n        <Route path=\"/\" component={LandingScreen} exact />\r\n        <Route path=\"/patients\" component={PatientLisingScreen} exact />\r\n        <Route path=\"/patients/:id\" component={PatientDetailScreen} exact />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { patientReducer } from \"./reducers/patientReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  patientData: patientReducer,\r\n  user: userReducer,\r\n});\r\nconst initialState = { patientData: { data: [] }, user: {} };\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","import {\r\n  ADD_PATIENT_REQUEST,\r\n  ADD_PATIENT_SUCCESS,\r\n  DELETE_PATIENT,\r\n  EDIT_PATIENT_REQUEST,\r\n  EDIT_PATIENT_SUCCESS,\r\n  RESET_DATA,\r\n} from \"../constants/patientConstants\";\r\nexport const patientReducer = (state = {data:[]}, action) => {\r\n  switch (action.type) {\r\n    case ADD_PATIENT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADD_PATIENT_SUCCESS:\r\n      return { ...state, data: action.payload };\r\n      case EDIT_PATIENT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case EDIT_PATIENT_SUCCESS:\r\n      return { ...state, data: action.payload };\r\n      case DELETE_PATIENT:\r\n      return { ...state, data: action.payload };\r\n      case RESET_DATA:\r\n      return { ...state, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { USER_LOGOUT } from \"../constants/userConstants\";\r\nexport const userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGOUT:\r\n      return { ...state, data: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\n// import './index.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"patientDetail_container__MXAAf\",\"header\":\"patientDetail_header__1xNQA\",\"title\":\"patientDetail_title__3elIL\",\"backContainer\":\"patientDetail_backContainer__39jaD\",\"backText\":\"patientDetail_backText__3zV1t\",\"buttonGroup\":\"patientDetail_buttonGroup__2UEg4\",\"alert\":\"patientDetail_alert__2OPcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader\":\"editPatient_modalHeader__3pyUq\",\"title\":\"editPatient_title__1JgcU\",\"alert\":\"editPatient_alert__1OdQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"landingScreen_container__3Jogs\",\"innerContainer\":\"landingScreen_innerContainer__3-2KA\",\"imageContainer\":\"landingScreen_imageContainer__1pOlh\",\"formContainer\":\"landingScreen_formContainer__19WC9\",\"mutedText\":\"landingScreen_mutedText__2x7B4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"patientListing_container__38l3B\",\"header\":\"patientListing_header__340ix\",\"title\":\"patientListing_title__1MzJq\",\"noData\":\"patientListing_noData__2Htuh\",\"tableRow\":\"patientListing_tableRow__3dW3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navbar_container__1cFaD\",\"logo\":\"navbar_logo__3GX9H\",\"addButton\":\"navbar_addButton__3CenP\",\"buttonGroup\":\"navbar_buttonGroup__NZV0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"customButton_button__GDCB0\"};"],"sourceRoot":""}