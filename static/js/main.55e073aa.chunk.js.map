{"version":3,"sources":["components/Button/CustomButton.js","constants/patientConstants.js","constants/userConstants.js","actions/userActions.js","screens/LandingScreen/LandingScreen.js","constants/modalConstants.js","actions/patientActions.js","components/EditPatientModal/EditPatient.js","components/CustomNavbar/CustomNavbar.js","screens/PatientLisingScreen/PatientListingScreen.js","screens/PatientDetailScreen/PatientDetailScreen.js","App.js","store.js","reducers/patientReducer.js","reducers/userReducer.js","index.js","screens/PatientDetailScreen/patientDetail.module.css","screens/LandingScreen/landingScreen.module.css","screens/PatientLisingScreen/styles.module.css","components/CustomNavbar/navbar.module.css","components/EditPatientModal/editPatient.module.css","components/Button/customButton.module.css"],"names":["CustomButton","props","Button","className","styles","button","children","ADD_PATIENT_REQUEST","ADD_PATIENT_SUCCESS","EDIT_PATIENT_REQUEST","EDIT_PATIENT_SUCCESS","DELETE_PATIENT","RESET_DATA","USER_LOGOUT","userLogout","history","dispatch","a","type","window","localStorage","clear","push","error","console","log","LandingScreen","useDispatch","useHistory","useState","userName","setUserName","loggedUser","setLoggedUser","useEffect","userData","JSON","parse","getItem","Container","container","Row","innerContainer","imageContainer","src","alt","formContainer","Form","onSubmit","e","preventDefault","setItem","stringify","onClick","mutedText","Group","controlId","Control","placeholder","maxLength","value","onChange","target","disabled","modalConstants","editPatient","data","id","getState","tableData","patientData","elementsIndex","findIndex","element","newTableData","payload","response","message","EditPatient","existingPatientData","firstName","setFirstName","lastName","setLastName","phone","setPhone","email","setEmail","country","setCountry","countryList","setCountryList","street","setStreet","pinCode","setPinCode","fetchCountries","axios","get","countryData","map","d","name","callingCode","callingCodes","length","Modal","mainContainer","size","aria-labelledby","centered","Header","modalHeader","Title","title","Body","uuidv4","addPatient","onHide","Label","required","Text","Col","option","options","c","label","code","htmlFor","InputGroup","Prepend","FormControl","replace","alert","validatePhoneNumber","Footer","CustomNavbar","React","modalShow","setModalShow","Navbar","Brand","logo","Toggle","Collapse","buttonGroup","addButton","xmlns","fill","width","height","viewBox","show","PatientLisingScreen","searchText","setSearchText","selectedPatient","setSelectedPatient","filteredData","setFilteredtData","useSelector","state","searchInput","filter","toLowerCase","includes","header","Table","striped","hover","sytle","borderColor","index","tableRow","onDoubleClick","noData","PatientDetailScreen","patientId","match","params","patientsData","backContainer","backText","splice","App","path","component","exact","reducer","combineReducers","action","loading","user","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.55e073aa.chunk.js","sourcesContent":["import { Button } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport styles from './customButton.module.css'\r\nconst CustomButton = (props) => {\r\n    return (\r\n        <Button className={styles.button} {...props}>\r\n      {props.children}\r\n      </Button>\r\n    )\r\n}\r\n\r\nexport default CustomButton\r\n","export const ADD_PATIENT_REQUEST=\"ADD_PATIENT_REQUEST\"\r\nexport const ADD_PATIENT_SUCCESS = \"ADD_PATIENT_SUCCESS\";\r\nexport const ADD_PATIENT_FAIL = \"ADD_PATIENT_FAIL\";\r\nexport const EDIT_PATIENT_REQUEST = \"EDIT_PATIENT_REQUEST\";\r\nexport const EDIT_PATIENT_SUCCESS = \"EDIT_PATIENT_SUCCESS\";\r\nexport const EDIT_PATIENT_FAIL = \"EDIT_PATIENT_FAIL\";\r\nexport const DELETE_PATIENT=\"DELETE_PATIENT\"\r\nexport const RESET_DATA=\"RESET_DATA\"","\r\nexport const USER_LOGOUT=\"USER_LOGOUT\"","import { RESET_DATA } from \"../constants/patientConstants\";\r\nimport { USER_LOGOUT } from \"../constants/userConstants\";\r\nexport const userLogout = (history) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_DATA,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGOUT,\r\n    });\r\n    window.localStorage.clear();\r\n    history.push('/')\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CustomButton from \"../../components/Button/CustomButton\";\r\nimport styles from \"./landingScreen.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userLogout } from \"../../actions/userActions\";\r\nconst LandingScreen = () => {\r\n  const dispatch=useDispatch();\r\n  let history = useHistory();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"User\", JSON.stringify({ userName }));\r\n    history.push(\"/patients\");\r\n  };\r\n  const logoutHandler = () => {\r\n    dispatch(userLogout(history))\r\n    setLoggedUser(\"\");\r\n  };\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"User\"));\r\n    if (userData) {\r\n      setLoggedUser(userData.userName);\r\n    }\r\n  }, [setLoggedUser]);\r\n  console.log(loggedUser);\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Row>\r\n        <div className={styles.innerContainer}>\r\n          <Row>\r\n            <div className={styles.imageContainer}>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/4/41/AliveCor_Logo_PNG.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </div>\r\n          </Row>\r\n          <Row className={styles.formContainer}>\r\n            <Form onSubmit={submitHandler}>\r\n              {!loggedUser ? (\r\n                <>\r\n                  <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Name to Continue\"\r\n                      maxLength=\"20\"\r\n                      value={userName}\r\n                      onChange={(e) => setUserName(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <CustomButton type=\"submit\" disabled={userName===''}>Continue</CustomButton>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <CustomButton onClick={() => history.push(\"/patients\")}>\r\n                    Continue as {loggedUser}\r\n                  </CustomButton>\r\n                  <p\r\n                    className={styles.mutedText}\r\n                    onClick={() => logoutHandler()}\r\n                  >\r\n                    Logout, Start Afresh?\r\n                  </p>\r\n                </>\r\n              )}\r\n            </Form>\r\n          </Row>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LandingScreen;\r\n","export const modalConstants={\r\n    EDIT:'EDIT',\r\n    CREATE:'CREATE'\r\n}","import {\r\n  EDIT_PATIENT_SUCCESS,\r\n  EDIT_PATIENT_REQUEST,\r\n  ADD_PATIENT_FAIL,\r\n  EDIT_PATIENT_FAIL,\r\n  ADD_PATIENT_REQUEST,\r\n  ADD_PATIENT_SUCCESS,\r\n  DELETE_PATIENT,\r\n} from \"../constants/patientConstants\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport const addPatient = (data) => async (dispatch, getState) => {\r\n  try {\r\n    //cherry picking existing data from the state\r\n    const tableData = getState().patientData.data;\r\n    console.log(tableData);\r\n    //state to request before api call\r\n    dispatch({\r\n      type: ADD_PATIENT_REQUEST,\r\n    });\r\n    //add data to the existing array of data (supposed to be an api call)\r\n    tableData.push({ ...data, id: uuidv4() });\r\n    dispatch({\r\n      type: ADD_PATIENT_SUCCESS,\r\n      payload: tableData,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: ADD_PATIENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editPatient = (data, id) => async (dispatch, getState) => {\r\n  try {\r\n    console.log(data);\r\n    //cherry picking existing data from the state\r\n    const tableData = getState().patientData.data;\r\n    //state to request before api call\r\n    dispatch({\r\n      type: EDIT_PATIENT_REQUEST,\r\n    });\r\n    //add data to the existing array of data (supposed to be an api call)\r\n    const elementsIndex = tableData.findIndex((element) => element.id === id);\r\n    if (elementsIndex >= 0) {\r\n      let newTableData = [...tableData];\r\n      newTableData[elementsIndex] = {id,...data};\r\n      dispatch({\r\n        type: EDIT_PATIENT_SUCCESS,\r\n        payload: newTableData,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: EDIT_PATIENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePatient = (id) => async (dispatch, getState) => {\r\n  try {\r\n    //cherry picking existing data from the state\r\n    const tableData = getState().patientData.data;\r\n    //state to request before api call\r\n    dispatch({\r\n      type: EDIT_PATIENT_REQUEST,\r\n    });\r\n    //add data to the existing array of data (supposed to be an api call)\r\n    const elementsIndex = tableData.findIndex((element) => element.id === id);\r\n    \r\n    if (elementsIndex >= 0) {\r\n      tableData.splice(elementsIndex,1);\r\n      dispatch({\r\n        type: DELETE_PATIENT,\r\n        payload: tableData,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Form,\r\n  Modal,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { editPatient, addPatient } from \"../../actions/patientActions\";\r\nimport styles from \"./editPatient.module.css\";\r\nimport { modalConstants } from \"../../constants/modalConstants\";\r\n\r\nimport CustomButton from \"../Button/CustomButton\";\r\nconst EditPatient = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { type, data: existingPatientData } = props;\r\n  //states to handle inputs\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [pinCode, setPinCode] = useState(\"\");\r\n  const clearInputs = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    setCountry(\"\");\r\n    setStreet(\"\");\r\n    setPinCode(\"\");\r\n    setCountry(\"\");\r\n  };\r\n  //if data is existing in props\r\n  const populateData = (data) => {\r\n    console.log(\"populate data\");\r\n    setFirstName(data.firstName);\r\n    setLastName(data.lastName);\r\n    setPhone(data.phone);\r\n    setEmail(data.email);\r\n    setStreet(data.street);\r\n    setPinCode(data.pinCode);\r\n    setCountry(data.country);\r\n  };\r\n  //fetching countries\r\n  const fetchCountries = async () => {\r\n    const { data } = await axios.get(\"https://restcountries.eu/rest/v2/all\");\r\n    let countryData = data.map((d) => {\r\n      return { name: d.name, callingCode: d.callingCodes[0] };\r\n    });\r\n    setCountryList(countryData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    countryList.length === 0 && fetchCountries();\r\n    if (type === modalConstants.EDIT) {\r\n      populateData(existingPatientData);\r\n    }\r\n  }, [existingPatientData]);\r\n  const validatePhoneNumber = (phone) => {\r\n    phone = phone.replace(/[^0-9]/g, \"\");\r\n    if (phone.length > 10) {\r\n      alert(\"Phone number cannot be more than ten digits\");\r\n    } else {\r\n      setPhone(phone);\r\n    }\r\n  };\r\n  //global submit handler\r\n  const submitHandler = (e) => {\r\n    //stopping event propogation to reload the page\r\n    e.preventDefault();\r\n    const data = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      country,\r\n      street,\r\n      pinCode,\r\n    };\r\n    type === modalConstants.EDIT\r\n      ? dispatch(editPatient(data, existingPatientData.id))\r\n      : dispatch(addPatient(data));\r\n    //cleanup\r\n    clearInputs();\r\n    props.onHide();\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        className={styles.mainContainer}\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header className={styles.modalHeader}>\r\n          <Modal.Title\r\n            id=\"contained-modal-title-vcenter\"\r\n            className={styles.title}\r\n          >\r\n            {type === modalConstants.EDIT ? \"Edit\" : \"Create\"} Patient\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter First Name\"\r\n                maxLength=\"20\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"lastName\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Last Name\"\r\n                maxLength=\"20\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"Address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Row>\r\n                <Col>\r\n                  <Select\r\n                    placeholder=\"Select Country\"\r\n                    value={country}\r\n                    onChange={(option) => setCountry(option)}\r\n                    options={countryList.map((c) => {\r\n                      return {\r\n                        value: c.name,\r\n                        label: c.name,\r\n                        code: c.callingCode,\r\n                      };\r\n                    })}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Street Name\"\r\n                    value={street}\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Pincode\"\r\n                    value={pinCode}\r\n                    onChange={(e) => setPinCode(e.target.value)}\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n            <label htmlFor=\"basic-url\">Phone Number</label>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                {country && (\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    +{country.code}\r\n                  </InputGroup.Text>\r\n                )}\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                type=\"number\"\r\n                placeholder=\"Enter Phone Number\"\r\n                value={phone}\r\n                onChange={(e) => validatePhoneNumber(e.target.value)}\r\n                maxLength=\"10\"\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <CustomButton\r\n              type=\"submit\"\r\n              disabled={phone && phone.replace(/[^0-9]/g, \"\").length !== 10}\r\n            >\r\n              {type === modalConstants.EDIT ? \"Save Changes\" : \"Submit\"}\r\n            </CustomButton>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CustomButton onClick={props.onHide}>Close</CustomButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPatient;\r\n","import React from \"react\";\r\nimport { Form, Navbar } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { modalConstants } from \"../../constants/modalConstants\";\r\nimport EditPatient from \"../EditPatientModal/EditPatient\";\r\nimport styles from \"./navbar.module.css\";\r\n\r\nimport { userLogout } from \"../../actions/userActions\";\r\nconst CustomNavbar = () => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  return (\r\n    <Navbar className={styles.container}>\r\n      <Navbar.Brand className={styles.logo} onClick={() => history.push(\"/\")}>\r\n        <h4>AliveCor</h4>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className={styles.buttonGroup}>\r\n      <Form>\r\n</Form>\r\n        <Navbar.Text\r\n          onClick={() => setModalShow(true)}\r\n          className={styles.addButton}\r\n        >\r\n          <h6>Add Patient</h6>\r\n        </Navbar.Text>\r\n        <Navbar.Text onClick={() => dispatch(userLogout(history))}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"white\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M16 9v-4l8 7-8 7v-4h-8v-6h8zm-16-7v20h14v-2h-12v-16h12v-2h-14z\" />\r\n          </svg>\r\n        </Navbar.Text>\r\n      </Navbar.Collapse>\r\n      <EditPatient\r\n        type={modalConstants.CREATE}\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Container, Form, Row, Table } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\nimport { modalConstants } from \"../../constants/modalConstants\";\r\nimport EditPatient from \"../../components/EditPatientModal/EditPatient\";\r\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\r\nconst PatientLisingScreen = (props) => {\r\n  let history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [selectedPatient, setSelectedPatient] = useState({});\r\n  const [filteredData, setFilteredtData] = useState([]);\r\n  let { data } = useSelector((state) => state.patientData);\r\n  console.log(data);\r\n  const editPatientModalHandler = (patientData) => {\r\n    setSelectedPatient(patientData);\r\n    setModalShow(true);\r\n  };\r\n  const filterHandler = (searchInput) => {\r\n    let filteredData = data.filter(\r\n      (value) =>\r\n        value.firstName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.lastName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.email.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.phone.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.country.value.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.street.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        value.pinCode.toLowerCase().includes(searchInput.toLowerCase())\r\n    );\r\n    return filteredData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('data')\r\n    searchText===\"\"?setFilteredtData(data):setFilteredtData(filterHandler(searchText));\r\n  }, [searchText, data]);\r\n  console.log(filteredData);\r\n  return (\r\n    <>\r\n      <CustomNavbar history={props.history} />\r\n      <Container className={styles.container}>\r\n        <Row className={styles.header}>\r\n          <Col>\r\n            <h3 className={styles.title}>Patient List</h3>\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search Patient...\"\r\n                  maxLength=\"20\"\r\n                  value={searchText}\r\n                  onChange={(e) => setSearchText(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table striped hover>\r\n            <thead>\r\n              <tr sytle={{ borderColor: \"blue\" }}>\r\n                <th>S.NO</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n\r\n                <th>Email</th>\r\n                <th>Phone Number</th>\r\n                <th>Address</th>\r\n                <th>Pin Code</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredData.length > 0 &&\r\n                filteredData.map((d, index) => (\r\n                  <tr\r\n                    className={styles.tableRow}\r\n                    onClick={() => history.push(`/patients/${d.id}`)}\r\n                    onDoubleClick={() => editPatientModalHandler(d)}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{d.firstName}</td>\r\n                    <td>{d.lastName}</td>\r\n                    <td>{d.email}</td>\r\n                    <td>{d.phone}</td>\r\n                    <td>\r\n                      {d.street}, {d.country.value}\r\n                    </td>\r\n                    <td>{d.pinCode}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          {filteredData.length === 0 && (\r\n            <div className={styles.noData}>\r\n              <h4>No data found</h4>\r\n            </div>\r\n          )}\r\n        </Row>\r\n        <EditPatient\r\n          type={modalConstants.EDIT}\r\n          data={selectedPatient}\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientLisingScreen;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport { useDispatch ,useSelector} from \"react-redux\";\r\nimport { Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Select from \"react-select\";\r\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\r\nimport styles from './patientDetail.module.css'\r\nimport CustomButton from \"../../components/Button/CustomButton\";\r\nimport { deletePatient, editPatient } from \"../../actions/patientActions\";\r\nconst PatientDetailScreen = (props) => {\r\n    let history = useHistory();\r\n    const {id:patientId}=props.match.params\r\n    const dispatch = useDispatch();\r\n    let { data:patientsData } = useSelector((state) => state.patientData);\r\n    \r\n  \r\n    //states to handle inputs\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [phone, setPhone] = useState(null);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [street, setStreet] = useState(\"\");\r\n    const [pinCode, setPinCode] = useState(\"\");\r\n  \r\n    //if data is existing in props\r\n    const populateData = (data) => {\r\n      console.log(\"populate data\");\r\n      setFirstName(data.firstName);\r\n      setLastName(data.lastName);\r\n      setPhone(data.phone);\r\n      setEmail(data.email);\r\n      setStreet(data.street);\r\n      setPinCode(data.pinCode);\r\n      setCountry(data.country);\r\n    };\r\n    //fetching countries\r\n    const fetchCountries = async () => {\r\n      const { data } = await axios.get(\"https://restcountries.eu/rest/v2/all\");\r\n      let countryData = data.map((d) => {\r\n        return { name: d.name, callingCode: d.callingCodes[0] };\r\n      });\r\n      setCountryList(countryData);\r\n    };\r\n  const validatePhoneNumber = (phone) => {\r\n    phone = phone.replace(/[^0-9]/g, \"\");\r\n    if (phone.length > 10) {\r\n      alert(\"Phone number cannot be more than ten digits\");\r\n    } else {\r\n      setPhone(phone);\r\n    }\r\n  };\r\n    useEffect(() => {\r\n      countryList.length === 0 && fetchCountries();\r\n      let index=patientsData.findIndex(d=>d.id===patientId)\r\n      if(index<0){\r\n          return history.push('/patients')\r\n      }\r\n      \r\n        index >-1 && populateData(patientsData[index]);\r\n    \r\n    }, [patientsData,history,patientId, countryList.length]);\r\n    //global submit handler\r\n    const submitHandler = (e) => {\r\n      //stopping event propogation to reload the page\r\n      e.preventDefault();\r\n      const dataToSave = {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phone,\r\n        country,\r\n        street,\r\n        pinCode,\r\n      };\r\n\r\n        dispatch(editPatient(dataToSave, patientId))\r\n      //cleanup\r\n      history.push('/patients')\r\n    };\r\n  return (\r\n    <>\r\n      <CustomNavbar history={props.history} />\r\n      <Container className={styles.container}>\r\n          <Row>\r\n              <div className={styles.backContainer} onClick={()=>history.push('/patients')}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"#2D9F86\" viewBox=\"0 0 24 24\"><path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"/></svg>\r\n        <span className={styles.backText}>Back</span>\r\n              </div>\r\n          </Row>\r\n        <Row className={styles.header}>\r\n          <Col>\r\n            <h3 className={styles.title}>Patient Detail</h3>\r\n          </Col>\r\n          \r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n            <Form onSubmit={submitHandler} className={styles.formContainer}>\r\n            <Form.Group className=\"mb-3\" controlId=\"firstName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter First Name\"\r\n                maxLength=\"20\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"lastName\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Last Name\"\r\n                maxLength=\"20\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>           \r\n            <Form.Group className=\"mb-3\" controlId=\"Address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Row>\r\n                <Col>\r\n                  <Select\r\n                  placeholder=\"Select Country\"\r\n                    value={country}\r\n                    onChange={(option) => setCountry(option)}\r\n                    options={countryList.map((c) => {\r\n                      return { value: c.name, label: c.name,code:c.callingCode };\r\n                    })}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Street Name\"\r\n                    value={street}\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Pincode\"\r\n                    value={pinCode}\r\n                    onChange={(e) => setPinCode(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n            <label htmlFor=\"basic-url\">Phone Number</label>\r\n            <InputGroup className=\"mb-3\">\r\n              \r\n              <InputGroup.Prepend>\r\n               {country &&  <InputGroup.Text id=\"basic-addon1\">+{country.code}</InputGroup.Text>}\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Phone Number\"\r\n                maxLength=\"10\"\r\n                value={phone}\r\n                onChange={(e) => validatePhoneNumber(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n            <Form.Group>\r\n            <div className={styles.buttonGroup} >\r\n            <CustomButton type=\"submit\">\r\n               {\"Save Changes\" }\r\n            </CustomButton>\r\n            <CustomButton onClick={()=>{\r\n                dispatch(deletePatient(patientId))\r\n                history.push('/patients')\r\n            }}>\r\n               {\"Delete Patient\" }\r\n            </CustomButton>\r\n            </div>\r\n            </Form.Group>\r\n          </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientDetailScreen;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport LandingScreen from \"./screens/LandingScreen/LandingScreen\";\r\nimport PatientLisingScreen from \"./screens/PatientLisingScreen/PatientListingScreen\";\r\nimport PatientDetailScreen from \"./screens/PatientDetailScreen/PatientDetailScreen\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route path=\"/\" component={LandingScreen} exact />\r\n        <Route path=\"/patients\" component={PatientLisingScreen} exact />\r\n        <Route path=\"/patients/:id\" component={PatientDetailScreen} exact />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { patientReducer } from \"./reducers/patientReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  patientData: patientReducer,\r\n  user: userReducer,\r\n});\r\nconst initialState = { patientData: { data: [] }, user: {} };\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","import {\r\n  ADD_PATIENT_REQUEST,\r\n  ADD_PATIENT_SUCCESS,\r\n  DELETE_PATIENT,\r\n  EDIT_PATIENT_REQUEST,\r\n  EDIT_PATIENT_SUCCESS,\r\n  RESET_DATA,\r\n} from \"../constants/patientConstants\";\r\nexport const patientReducer = (state = {data:[]}, action) => {\r\n  switch (action.type) {\r\n    case ADD_PATIENT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADD_PATIENT_SUCCESS:\r\n      return { ...state, data: action.payload };\r\n      case EDIT_PATIENT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case EDIT_PATIENT_SUCCESS:\r\n      return { ...state, data: action.payload };\r\n      case DELETE_PATIENT:\r\n      return { ...state, data: action.payload };\r\n      case RESET_DATA:\r\n      return { ...state, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n   USER_LOGOUT\r\n  } from \"../constants/userConstants\";\r\n  export const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      \r\n        case USER_LOGOUT:\r\n        return { ...state, data: null };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\n// import './index.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"patientDetail_container__MXAAf\",\"header\":\"patientDetail_header__1xNQA\",\"title\":\"patientDetail_title__3elIL\",\"backContainer\":\"patientDetail_backContainer__39jaD\",\"backText\":\"patientDetail_backText__3zV1t\",\"buttonGroup\":\"patientDetail_buttonGroup__2UEg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"landingScreen_container__3Jogs\",\"innerContainer\":\"landingScreen_innerContainer__3-2KA\",\"imageContainer\":\"landingScreen_imageContainer__1pOlh\",\"formContainer\":\"landingScreen_formContainer__19WC9\",\"mutedText\":\"landingScreen_mutedText__2x7B4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1U1o3\",\"header\":\"styles_header__3PwYq\",\"title\":\"styles_title__cf1KU\",\"noData\":\"styles_noData__1q6y4\",\"tableRow\":\"styles_tableRow__1C2H6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navbar_container__1cFaD\",\"logo\":\"navbar_logo__3GX9H\",\"addButton\":\"navbar_addButton__3CenP\",\"buttonGroup\":\"navbar_buttonGroup__NZV0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader\":\"editPatient_modalHeader__3pyUq\",\"title\":\"editPatient_title__1JgcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"customButton_button__GDCB0\"};"],"sourceRoot":""}